buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

// Release Version - if you change version, under libraries will change too.
plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

// group - 'cashewnut' modules - ''
group = 'cashewnut'
version = '0.0.1-SNAPSHOT'

//ext["hibernate.version"] = "5.6.5.Final"
//ext["querydsl.version"] = "5.0.0"

// Java JDK Version - '1.8' Fixed
java {
    sourceCompatibility = '1.8'
}
// Annotation Extends Form - Like @Lombok @Data
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    // 외부 API 통신용 웹소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Lombok 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //PostgreSQL 데이터베이스 추가
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.postgresql:postgresql:42.5.4'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    //H2 데이터베이스 추가
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //테스트
    implementation 'junit:junit:4.13.2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$projectDir/src/main/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
    delete file('/src/main/generated')
}

// React base path = "/src/main/frontend"
def frontendDir = "$projectDir/src/main/frontend"



